/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 nerd.gltf --transform
Author: Space Oddity (https://sketchfab.com/spaceoddity)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/nerd-7aaaf7aca07f438aa8ac20ad02317b5e
Title: Nerd
*/

import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";

export default function Model(props) {
  const { nodes, materials } = useGLTF("/nerd-transformed.glb");
  return (
    <group {...props} dispose={null}>
      <group position={[0, 0.64, 0]} rotation={[0, 0.31, 0.09]}>
        <mesh
          geometry={nodes.Object_8.geometry}
          material={materials.material_0}
          position={[0.03, -0.09, 0]}
        />
        <mesh
          geometry={nodes.Object_10.geometry}
          material={materials.material_0}
          position={[0.03, -0.09, 0]}
        />
        <mesh
          geometry={nodes.Object_12.geometry}
          material={materials.material_0}
          position={[0.03, -0.09, 0]}
        />
        <mesh
          geometry={nodes.Object_14.geometry}
          material={materials.material_0}
          position={[0.03, -0.09, 0]}
        />
        <mesh
          geometry={nodes.Object_16.geometry}
          material={materials.material_0}
          position={[0.03, -0.09, 0]}
        />
        <mesh
          geometry={nodes.Object_18.geometry}
          material={materials.material_0}
          position={[0.03, -0.09, 0]}
        />
        <mesh
          geometry={nodes.Object_20.geometry}
          material={materials.material_0}
          position={[0.03, -0.09, 0]}
        />
      </group>
      <group position={[0.03, 0.59, -0.09]} rotation={[-0.48, Math.PI / 6, 0]}>
        <mesh
          geometry={nodes.Object_23.geometry}
          material={materials.material_0}
          position={[0, -0.04, 0.09]}
        />
        <mesh
          geometry={nodes.Object_25.geometry}
          material={materials.material_0}
          position={[0, -0.04, -0.22]}
          rotation={[0, Math.PI / 4, 0]}
        />
      </group>
      <group position={[0.03, 0.59, 0.09]} rotation={[0.65, 0, -Math.PI / 8]}>
        <mesh
          geometry={nodes.Object_28.geometry}
          material={materials.material_0}
          position={[0, -0.04, -0.09]}
        />
        <mesh
          geometry={nodes.Object_30.geometry}
          material={materials.material_0}
          position={[0, -0.04, 0.22]}
          rotation={[0, -Math.PI / 4, 0]}
        />
      </group>
      <group position={[0.03, 0.3, 0.13]} rotation={[0.14, 0.32, -0.42]}>
        <mesh
          geometry={nodes.Object_33.geometry}
          material={materials.material_0}
          position={[0, 0.26, -0.13]}
        />
        <mesh
          geometry={nodes.Object_35.geometry}
          material={materials.material_0}
          position={[0, 0.26, -0.13]}
        />
        <mesh
          geometry={nodes.Object_37.geometry}
          material={materials.material_0}
          position={[0, 0.26, -0.13]}
        />
        <mesh
          geometry={nodes.Object_39.geometry}
          material={materials.material_0}
          position={[0, 0.26, -0.13]}
        />
      </group>
      <group position={[0.03, 0.3, -0.06]} rotation={[0.12, -0.28, 0.41]}>
        <mesh
          geometry={nodes.Object_42.geometry}
          material={materials.material_0}
          position={[0, 0.26, 0.06]}
        />
        <mesh
          geometry={nodes.Object_44.geometry}
          material={materials.material_0}
          position={[0, 0.26, 0.06]}
        />
        <mesh
          geometry={nodes.Object_46.geometry}
          material={materials.material_0}
          position={[0, 0.26, 0.06]}
        />
        <mesh
          geometry={nodes.Object_48.geometry}
          material={materials.material_0}
          position={[0, 0.26, 0.06]}
        />
      </group>
      <mesh
        geometry={nodes.Object_5.geometry}
        material={materials.material_0}
        position={[0.03, 0.55, 0]}
      />
    </group>
  );
}

useGLTF.preload("/nerd-transformed.glb");
